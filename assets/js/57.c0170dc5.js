(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{483:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_0-12-버전-업데이트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-12-버전-업데이트"}},[t._v("#")]),t._v(" 0.12 버전 업데이트!")]),t._v(" "),a("p",[t._v("이번 릴리즈에는 변경 사항이 많지 않아 마이그레이션이 그리 어렵지 않았습니다.")]),t._v(" "),a("h2",{attrs:{id:"멀티뷰-multi-view-추가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#멀티뷰-multi-view-추가"}},[t._v("#")]),t._v(" 멀티뷰(Multi view) 추가")]),t._v(" "),a("p",[t._v("이제 "),a("code",[t._v("RenderPipelineDescriptor")]),t._v("에 "),a("code",[t._v("multiview")]),t._v(" 필드가 포함됩니다. 이 필드는 배열 텍스처를 렌더 어태치먼트(render attachment)로 사용할 경우, 해당 배열 텍스처의 수를 나타냅니다.")]),t._v(" "),a("h2",{attrs:{id:"block-속성-제거"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block-속성-제거"}},[t._v("#")]),t._v(" block 속성 제거")]),t._v(" "),a("p",[t._v("WGSL 명세가 변경되어 "),a("code",[t._v("block")]),t._v(" 속성이 사라졌습니다. 이는 이제 WGSL의 "),a("code",[t._v("struct")]),t._v("를 유니폼 입력으로 사용하기 위해 별도의 어노테이션을 붙일 필요가 없다는 의미입니다. 예를 들어:")]),t._v(" "),a("div",{staticClass:"language-wgsl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-wgsl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Camera")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    view_pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    view_proj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("mat4x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("위 코드는 아래와 같이 간단하게 바꿀 수 있습니다.")]),t._v(" "),a("div",{staticClass:"language-wgsl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-wgsl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Camera")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    view_pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("vec4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    view_proj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("mat4x4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"더-강화된-유효성-검사"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#더-강화된-유효성-검사"}},[t._v("#")]),t._v(" 더 강화된 유효성 검사")]),t._v(" "),a("p",[t._v("이제 Wgpu에 유효성 검사가 추가되어, 유니폼이 셰이더에 명시된 정렬(alignment)과 일치하지 않으면 그리기를 시도할 때 프로그램이 중단됩니다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("thread 'main' panicked at 'wgpu error: Validation Error\n\nCaused by:\n    In a RenderPass\n      note: encoder = `Render Encoder`\n    In a draw command, indexed:true indirect:false\n      note: render pipeline = `Render Pipeline`\n    Buffer is bound with size 28 where the shader expects 32 in group[1] compact index 0\n")])])]),a("p",[t._v("제가 변경해야 했던 구조체는 "),a("code",[t._v("LightUniform")]),t._v("이 유일했습니다. 패딩 필드를 추가하기만 하면 되었습니다.")]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[repr(C)]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[derive(Debug, Copy, Clone, bytemuck::Pod, bytemuck::Zeroable)]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token type-definition class-name"}},[t._v("LightUniform")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    position"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 유니폼은 16바이트(float 4개) 간격으로 정렬되어야 하므로, 여기에 패딩 필드를 사용해야 합니다.")]),t._v("\n    _padding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("f32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 유니폼은 16바이트(float 4개) 간격으로 정렬되어야 하므로, 여기에 패딩 필드를 사용해야 합니다.")]),t._v("\n    _padding2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("이 변경 사항을 반영하기 위해 "),a("a",{attrs:{href:"../../intermediate/tutorial10-lighting"}},[t._v("조명 튜토리얼")]),t._v("을 업데이트했습니다.")]),t._v(" "),a("h2",{attrs:{id:"기타"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기타"}},[t._v("#")]),t._v(" 기타")]),t._v(" "),a("p",[t._v("최근 "),a("code",[t._v("anyhow")]),t._v(" 라이브러리 배포에서 글로브 임포트(glob import, 예: "),a("code",[t._v("use anyhow::*")]),t._v(")가 깨지는 문제가 발생하여, 정규화된(qualified) 임포트(예: "),a("code",[t._v("anyhow::Result")]),t._v(")를 사용하도록 코드를 변경해야 했습니다. 이 문제는 주로 일부 쇼케이스 예제의 빌드 스크립트에서 발생했습니다.")]),t._v(" "),a("p",[t._v("메인 튜토리얼 예제는 영향을 받지 않았으며 변경 사항도 미미합니다. 궁금하시다면 언제든 저장소를 확인해 보세요.")])])}),[],!1,null,null,null);a.default=e.exports}}]);